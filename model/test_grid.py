from model.grid import generateGrid
from model._utilities import Goals
import numpy as np
import numpy.testing as npt


portfolios = np.array([[0.05258386, 0.03704926],
       [0.05515672, 0.03960988],
       [0.05772681, 0.04625568],
       [0.06029967, 0.05555016],
       [0.06286483, 0.06637403],
       [0.06545148, 0.07813246],
       [0.06801664, 0.09041086],
       [0.07059443, 0.103057  ],
       [0.07315959, 0.11592848],
       [0.07573245, 0.12898073],
       [0.07830254, 0.14213997],
       [0.0808754 , 0.15540374],
       [0.08344549, 0.16872224],
       [0.08601835, 0.18210899],
       [0.08858351, 0.19552512]])

def test_should_generate_grid_without_infusions():
    
    W0 = 100
    imax = 10  
    
    goals = Goals([{
        "time": 5,
        "cost": 150,
        "utility": 100                
    }])

    infusions = np.zeros(goals.get_investment_period())
 
    grid = generateGrid(W0, imax, infusions, goals, portfolios[0,0], portfolios[0,1], portfolios[-1,0], portfolios[-1,1])

    expectedGrid =     [[100.00,    100.00,    100.00,   100.00,   100.00,   100.00,   100.00,   100.00,   100.00,   100.00],
     [50.56,      57.95,      66.42,      76.12,      87.25,     100.00,     114.61,     131.36,    150.56,    172.56],
     [45.58,      55.47,      67.51,      82.17,     100.00,     121.71,     148.12,     180.28,    219.41,    267.03],
     [37.69,      48.11,      61.40,      78.36,     100.00,     127.62,     162.88,     207.87,    265.29,    338.58],
     [32.00,      42.54,      56.56,      75.21,     100.00,     132.96,     176.79,     235.06,    312.54,    415.56],
     [27.61,      38.09,      52.55,      72.49,     100.00,     137.95,     190.30,     262.51,    362.13,    499.56],
     [24.12,      34.41,      49.11,      70.08,     100.00,     142.70,     203.63,     290.59,    414.67,    591.73]]

    assert grid.shape == (7,10)
    npt.assert_almost_equal(grid,expectedGrid, 2)
    